#!/bin/bash

# sixad-bin wrapper
# written by falkTX
# modified by Dark-Show

DEBUG=0
LEGACY=0
BLUETOOTHD=/usr/libexec/bluetooth/bluetoothd

trap "exit" SIGHUP SIGINT SIGTERM

. /etc/default/sixad

bt_device_checkr() {
if (! hciconfig dev &> /dev/null); then
    return 0;
fi
return 1;
}

bt_device_check () {
if (which hciconfig > /dev/null); then
  while (! hciconfig dev &> /dev/null); do
    echo "No bluetooth adapters found on the system; will try again in 1 second."
    sleep 1;
  done

  VER=`hciconfig default version | grep "HCI Ver" | awk '{print$3}'`
  if [ "$VER" == "1.1" ]; then
    echo "***** NOTICE *****"
    echo "You're using a very old bluetooth dongle,"
    echo "the Sixaxis will not work properly!"
  elif [ "$VER" == "1.0" ]; then
    echo "***** WARNING *****"
    echo "You're using a _really_ old bluetooth dongle,"
    echo "the Sixaxis will just not work!"
  fi
  bt_device_enable
fi
}

bt_device_enable () {
bt_device_up
bt_device_pscan
}

bt_device_up () {
hciconfig hci0 up
}

bt_device_pscan () {
hciconfig hci0 pscan
}

sixad_running_check () {
ps -e | grep sixad-bin > /dev/null
}

bluetoothd_running_check () {
ps -e | grep bluetoothd > /dev/null
}

isroot_check () {
# check, if sudo is used
if [[ $(id -u) -ne 0 ]]; then
    echo "Script must be run as root. Try 'sudo $0'"
    exit 1
fi
}

bt_start () {
chmod 755 "$BLUETOOTHD"
if [ -f /lib/udev/rules.d/97-bluetooth-hid2hci.rules ]; then
  /usr/sbin/bluetoothd --udev
elif [ -f /etc/rc.d/bluetooth ]; then
  /etc/rc.d/bluetooth start
else
  /etc/init.d/bluetooth start
fi
}

bt_stop() {
chmod 644 "$BLUETOOTHD"
if (bluetoothd_running_check); then
  pkill -KILL bluetoothd
fi
}

bt_start_and_stop () {
bt_start
env sleep 2
bt_stop
}

sixad_watchdog (){
    echo "Watching... (5s)"
    while (true); do
        if (bt_device_checkr); then
            echo "Watchdog: Bluetooth disconnected, killing sixad."
            pkill -KILL sixad-sixaxis
            pkill -KILL sixad-remote
            pkill -TERM sixad-bin
            break
        fi
        if (hciconfig hci0 | grep "DOWN" &> /dev/null); then
          echo "Watchdog: hci0 down, re-enabling."
          bt_device_up
        fi
        if ! (hciconfig hci0 | grep "PSCAN" &> /dev/null); then
          echo "Watchdog: PSCAN not set, resetting."
          bt_device_pscan
        fi
        sleep 5;
    done
    sixad_start
}

sixad_start () {
    bt_device_check
    bt_start_and_stop
    env sleep 1
    /usr/sbin/sixad-bin $DEBUG $LEGACY $REMOTE &
    env sleep 2
    bt_device_enable
    sixad_watchdog
}

case $1 in
  --start|-start|start|-s)
isroot_check
#boot error fix attempt.
REMOTE=0
bt_device_check
if (sixad_running_check); then
  echo "sixad is already running."
  echo "run '$0 --stop' to stop it"
else
  sixad_start
fi
  ;;

  --stop|-stop|stop)
isroot_check
pkill -KILL sixad-sixaxis
pkill -KILL sixad-remote
pkill -TERM sixad-bin
bt_start
env sleep 1
pkill -TERM sixad
  ;;

  --remote|-remote|remote)
isroot_check
REMOTE=1
bt_device_check
bt_start_and_stop
/usr/sbin/sixad-bin $DEBUG $LEGACY $REMOTE
env sleep 2
sixad_watchdog
  ;;

  --restore|-restore|restore|-r)
isroot_check
bt_start
  ;;

  --boot-yes)
isroot_check
# ArchLinux
if [ -f /etc/arch-release ]; then
  sed '/DAEMONS=/ s/)/ sixad)/g' -i /etc/rc.conf
# Gentoo
elif [ -f /etc/gentoo-release ]; then
  rc-update add sixad
# Debian (default)
else
  if [ -f /etc/rc2.d/S90sixad ]; then true; else ln -s /etc/init.d/sixad /etc/rc2.d/S90sixad; fi
  if [ -f /etc/rc3.d/S90sixad ]; then true; else ln -s /etc/init.d/sixad /etc/rc3.d/S90sixad; fi
  if [ -f /etc/rc4.d/S90sixad ]; then true; else ln -s /etc/init.d/sixad /etc/rc4.d/S90sixad; fi
  if [ -f /etc/rc5.d/S90sixad ]; then true; else ln -s /etc/init.d/sixad /etc/rc5.d/S90sixad; fi
fi
  ;;

  --boot-no)
isroot_check
# ArchLinux
if [ -f /etc/arch-release ]; then
  sed "s/ sixad//" -i /etc/rc.conf
# Gentoo
elif [ -f /etc/gentoo-release ]; then
  rc-update delete sixad
# Debian (default)
else
  if [ -f /etc/rc2.d/S90sixad ]; then rm /etc/rc2.d/S90sixad; fi
  if [ -f /etc/rc3.d/S90sixad ]; then rm /etc/rc3.d/S90sixad; fi
  if [ -f /etc/rc4.d/S90sixad ]; then rm /etc/rc4.d/S90sixad; fi
  if [ -f /etc/rc5.d/S90sixad ]; then rm /etc/rc5.d/S90sixad; fi
fi
  ;;

  --help|-help|help|-h)
echo "[Qt]SixA Daemon"
$0
  ;;

  --version|-version|version|-v)
echo "[Qt]SixA Daemon - version 1.5.1"
  ;;

  *)
echo "usage: $0 <command>

command can be:
    -h, --help          Show help (this message)
    -v, --version       Show sixad version

    -s, --start         Start sixad
        --stop          Stop sixad
        --remote        BD Remote mode

    -r, --restore       Restore regular bluetooth

        --boot-yes      Auto-starts sixad at boot time
        --boot-no       Does not auto-start sixad at boot time

You can also check: sixad-raw, sixad-notify"
  ;;

esac